[
  {
    "id": "ch7_q1",
    "type": "short",
    "question": "هش چیست و چه ویژگی‌هایی دارد؟",
    "answer": "هش یک تابع یک‌طرفه است که ورودی را به یک مقدار ثابت طولی (Digest) تبدیل می‌کند. ویژگی‌ها: یک‌طرفه بودن، تولید خروجی یکتا برای ورودی متفاوت، و حساسیت بالا به تغییرات کوچک در ورودی.",
    "hint": "- هش = اثر انگشت داده.\n- **حتماً به خاطر بسپار:** تغییر یک بیت در ورودی کل خروجی را عوض می‌کند.",
    "extra": "### ویژگی‌ها:\n- **Deterministic:** ورودی یکسان → خروجی یکسان.\n- **Pre-image resistance:** پیدا کردن ورودی از روی هش سخت است.\n- **Avalanche effect:** تغییر کوچک → تغییر بزرگ در خروجی.\n\n### ADHD نکته:\nهش را مثل یک مخلوط‌کن ببین که مواد را تبدیل به اسموتی می‌کند؛ نمی‌توانی اسموتی را دوباره به مواد اولیه تبدیل کنی."
  },
  {
    "id": "ch7_q2",
    "type": "short",
    "question": "MD5 چیست و چرا دیگر توصیه نمی‌شود؟",
    "answer": "**MD5** یک الگوریتم هش ۱۲۸ بیتی قدیمی است که به‌خاطر سرعت بالا محبوب بود، ولی به دلیل آسیب‌پذیری در برابر Collision دیگر برای امنیت استفاده نمی‌شود. مهاجم می‌تواند دو ورودی متفاوت بسازد که هش یکسان دارند.",
    "hint": "- MD5 = سریع ولی ناامن.\n- **Collision** = دو ورودی مختلف → یک خروجی.",
    "extra": "### کاربردهای گذشته:\n- بررسی صحت فایل‌ها.\n- ذخیره رمز عبور (غیرامن).\n\n### ضعف‌ها:\n- Collision حمله‌پذیر.\n- مناسب برای ذخیره امن رمز عبور یا امضای دیجیتال نیست.\n\n### ADHD نکته:\nمثل یک قفل قدیمی که هرکسی می‌تواند کلید مشابه بسازد."
  },
  {
    "id": "ch7_q3",
    "type": "short",
    "question": "SHA1 چیست و وضعیت امنیتی آن چگونه است؟",
    "answer": "**SHA1** الگوریتم هش ۱۶۰ بیتی است که نسبت به MD5 مقاوم‌تر بود، ولی تحقیقات ثابت کرده‌اند در برابر Collision مقاومتی کافی ندارد. استفاده از آن در امضای دیجیتال و گواهی‌نامه‌ها کنار گذاشته شده است.",
    "hint": "- SHA1 = بهتر از MD5 ولی هنوز ناامن.\n- **حتماً به خاطر بسپار:** NIST آن را Deprecated کرده است.",
    "extra": "### کاربردهای گذشته:\n- SSL/TLS قدیمی.\n- کنترل نسخه (Git).\n\n### ضعف‌ها:\n- Collision در هزینه عملیاتی ممکن.\n\n### ADHD نکته:\nمثل یک قفل کمی جدیدتر از MD5 که هنوز می‌توان بازش کرد."
  },
  {
    "id": "ch7_q4",
    "type": "short",
    "question": "SHA256 چیست و چرا امن‌تر است؟",
    "answer": "**SHA256** الگوریتم هش ۲۵۶ بیتی از خانواده SHA-2 است که در حال حاضر امن و استاندارد برای بسیاری از کاربردهاست. مقاومت بالایی در برابر Collision و Pre-image attacks دارد و در بلاکچین، TLS، و ذخیره امن استفاده می‌شود.",
    "hint": "- SHA256 = قفل ایمن مدرن.\n- خروجی ۲۵۶ بیت (۶۴ کاراکتر هگز).",
    "extra": "### کاربردها:\n- Bitcoin.\n- گواهی‌های SSL/TLS.\n- امضای دیجیتال.\n\n### ADHD نکته:\nSHA256 مثل یک گاوصندوق جدید است که شکستن آن نیاز به قدرت محاسباتی نجومی دارد."
  },
  {
    "id": "ch7_q5",
    "type": "short",
    "question": "Collision چیست و چرا خطرناک است؟",
    "answer": "Collision زمانی رخ می‌دهد که دو ورودی متفاوت هش یکسانی تولید کنند. این وضعیت برای امنیت مشکل‌ساز است چون مهاجم می‌تواند داده مخرب را جایگزین داده معتبر کند بدون تغییر هش، و این می‌تواند امضای دیجیتال یا تأیید فایل را فریب دهد.",
    "hint": "- Collision = دو نفر با اثر انگشت یکسان.\n- خطر: جعل داده بدون تغییر هش.",
    "extra": "### مثال:\n- ساخت دو سند متفاوت با هش یکسان برای فریب سیستم تأیید.\n\n### ADHD نکته:\nمثل این است که دو نفر متفاوت پاسپورت با شماره یکسان داشته باشند."
  },
  {
    "id": "ch7_q6",
    "type": "short",
    "question": "Rainbow Table چیست و چگونه عمل می‌کند؟",
    "answer": "**Rainbow Table** یک جدول پیش‌محاسبه شده از هش‌ها برای مقادیر ممکن رمز عبور است. مهاجم با مقایسه هش‌ها با این جدول می‌تواند به سرعت رمز اصلی را پیدا کند، به‌خصوص اگر هش بدون Salt ذخیره شده باشد.",
    "hint": "- Rainbow Table = دفترچه رمزهای آماده.\n- مقابله: استفاده از Salt و الگوریتم‌های قوی.",
    "extra": "### مثال:\n- هش `5f4dcc3b5aa765d61d8327deb882cf99` در جدول → \"password\".\n\n### ADHD نکته:\nمثل این است که یک کتاب داری که همه ترکیب‌های قفل را از قبل نوشته."
  },
  {
    "id": "ch7_q7",
    "type": "short",
    "question": "Salt چیست و چرا باید استفاده شود؟",
    "answer": "Salt یک رشته تصادفی است که پیش یا پس از رمز عبور اضافه می‌شود قبل از هش کردن، تا هش نهایی برای هر کاربر حتی با رمز یکسان متفاوت باشد. این کار Rainbow Table را بی‌اثر می‌کند و امنیت ذخیره رمز عبور را بسیار بالا می‌برد.",
    "hint": "- Salt = ادویه امنیت.\n- هر کاربر باید Salt متفاوت داشته باشد.",
    "extra": "### مثال:\n- رمز \"123456\" + Salt → هش متفاوت برای هر کاربر.\n\n### ADHD نکته:\nمثل این است که قبل از پخت غذا، یک ادویه خاص اضافه کنی که مزه‌اش را منحصر به فرد کند."
  },
  {
    "id": "ch7_q8",
    "type": "short",
    "question": "هش چه نقشی در Incident Response دارد؟",
    "answer": "در Incident Response، هش برای شناسایی فایل‌های مخرب، بررسی تغییرات در سیستم، و اطمینان از صحت شواهد دیجیتال استفاده می‌شود. با مقایسه هش فعلی با هش شناخته‌شده، می‌توان به‌سرعت تغییرات یا وجود بدافزار را شناسایی کرد و در Forensics نیز از آن برای تضمین عدم تغییر شواهد استفاده می‌شود.",
    "hint": "- هش = شناسه یکتا برای فایل.\n- کاربرد: شناسایی، صحت‌سنجی، حفاظت شواهد.",
    "extra": "### مثال:\n- بررسی اینکه فایل بدافزار تغییر کرده یا خیر.\n- تأیید صحت تصویر Forensic.\n\n### ADHD نکته:\nهش را مثل مهر پلیس روی یک پاکت مدرک تصور کن که اگر باز شود مهر می‌شکند."
  },
  {
    "id": "ch7_q9",
    "type": "short",
    "question": "تفاوت هش و رمزنگاری چیست؟",
    "answer": "هش یک‌طرفه و غیرقابل برگشت است، در حالی که رمزنگاری دوطرفه است و امکان بازگرداندن داده به حالت اصلی با کلید وجود دارد. هش برای صحت و یکپارچگی داده‌ها استفاده می‌شود، رمزنگاری برای محرمانگی.",
    "hint": "- هش = اثر انگشت.\n- رمزنگاری = قفل و کلید.",
    "extra": "### مثال:\n- هش: بررسی صحت دانلود فایل.\n- رمزنگاری: حفاظت از ایمیل با PGP.\n\n### ADHD نکته:\nهش مثل عکس پاسپورت است، رمزنگاری مثل گذاشتن پاسپورت در گاوصندوق."
  },
  {
    "id": "ch7_q10",
    "type": "short",
    "question": "چرا Tier 3 باید الگوریتم‌های هش را بشناسد؟",
    "answer": "Tier 3 مسئول شناسایی و تحلیل تهدیدات پیشرفته است، و شناخت الگوریتم‌های هش به او کمک می‌کند تا بدافزارها را شناسایی کند، صحت شواهد را تضمین کند، و ضعف‌های احتمالی ذخیره‌سازی یا انتقال داده را کشف نماید. همچنین این دانش برای Threat Hunting، Incident Response و Forensic حیاتی است.",
    "hint": "- هش = ابزار کلیدی در شکار تهدید.\n- کاربرد: تشخیص بدافزار، صحت شواهد، بررسی تغییرات.",
    "extra": "### ADHD نکته:\nTier 3 بدون دانش هش مثل یک کارآگاه بدون اثر انگشت‌شناسی است."
  }
]
